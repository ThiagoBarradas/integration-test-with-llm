{
  "openapi": "3.0.1",
  "info": {
    "title": "Supermarket API",
    "description": "Simple RESTful API built with ASP.NET Core to show how to create RESTful services using a service-oriented architecture.",
    "contact": {
      "name": "Evandro Gayer Gomes",
      "url": "https://evgomes.github.io/"
    },
    "license": {
      "name": "MIT"
    },
    "version": "v5"
  },
  "paths": {
    "/api/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Lists all categories.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryResource"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Saves a new category.",
        "requestBody": {
          "description": "Category data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCategoryResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCategoryResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCategoryResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/{id}": {
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Updates an existing category according to an identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Updated category data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCategoryResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCategoryResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCategoryResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResource"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Deletes a given category according to an identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResource"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Lists all existing products according to query filters.",
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "description": "A existing category ID",
            "schema": {
              "type": "integer",
              "description": "A existing category ID",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Optional. Min value 1",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Optional. Min value 1",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "Optional. Min value 1",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Optional. Min value 1",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceQueryResultResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Saves a new product.",
        "requestBody": {
          "description": "Product data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveProductResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveProductResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveProductResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/{id}": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Updates an existing product according to an identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Product data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveProductResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveProductResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveProductResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResource"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Deletes a given product according to an identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResource"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CategoryResource": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorResource": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductResource": {
        "required": [
          "id",
          "name",
          "quantityInPackage",
          "unitOfMeasurement"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "quantityInPackage": {
            "type": "integer",
            "format": "int32"
          },
          "unitOfMeasurement": {
            "$ref": "#/components/schemas/UnitOfMeasurement"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryResource"
          }
        },
        "additionalProperties": false
      },
      "ProductResourceQueryResultResource": {
        "required": [
          "items",
          "totalItems"
        ],
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductResource"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveCategoryResource": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SaveProductResource": {
        "required": [
          "categoryId",
          "name",
          "quantityInPackage",
          "unitOfMeasurement"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "quantityInPackage": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "unitOfMeasurement": {
            "$ref": "#/components/schemas/UnitOfMeasurement"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UnitOfMeasurement": {
        "enum": [
          "Unity",
          "Milligram",
          "Gram",
          "Kilogram",
          "Liter"
        ],
        "type": "string"
      }
    }
  }
}