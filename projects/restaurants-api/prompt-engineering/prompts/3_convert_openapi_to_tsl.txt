Dado o exemplo que lhe passei de como converter uma especificação OpenApi para TSL, preciso que você me forneça o TSL em yml da seguinte especificação OpenApi:
Importante ressaltar a importância e necessidade de gerar o maior número de cenários de teste possível visando o aumento máximo de cobertura. 
Você deve gerar todos os casos, sem retornar uma resposta me solicitando para complementar algo.

```json
{
  "openapi": "3.0.1",
  "info": {
    "title": "Restaurants.API",
    "version": "1.0"
  },
  "paths": {
    "/api/restaurants/{restaurantId}/dishes": {
      "post": {
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDishCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DishDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestSample"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DishDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/restaurants/{restaurantId}/dishes/{dishId}": {
      "get": {
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dishId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DishDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/restaurants": {
      "get": {
        "tags": [
          "Restaurants"
        ],
        "parameters": [
          {
            "name": "searchPhrase",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "<i>Available values</i>: Positive integer greater than or equal 1",
            "schema": {
              "type": "integer",
              "description": "<i>Available values</i>: Positive integer greater than or equal 1",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "<i>Available values</i>: Positive integer greater than or equal 1",
            "schema": {
              "type": "integer",
              "description": "<i>Available values</i>: Positive integer greater than or equal 1",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "<i>Available values</i>: Name, Category, Description",
            "schema": {
              "type": "string",
              "description": "<i>Available values</i>: Name, Category, Description"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantDtoPagedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestSample"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Restaurants"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRestaurantCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestSample"
                }
              }
            }
          }
        }
      }
    },
    "/api/restaurants/{id}": {
      "get": {
        "tags": [
          "Restaurants"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Restaurants"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRestaurantCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Restaurants"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/restaurants/{id}/logo": {
      "post": {
        "tags": [
          "Restaurants"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Form Data with 'file' property with a image file",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadRequestSample": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "$ref": "#/components/schemas/BadRequestSampleErrors"
          },
          "traceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BadRequestSampleErrors": {
        "type": "object",
        "properties": {
          "somePropertyX": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "somePropertyY": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateDishCommand": {
        "required": [
          "description",
          "kiloCalories",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 16,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "maxLength": 32,
            "minLength": 3,
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "kiloCalories": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateRestaurantCommand": {
        "required": [
          "category",
          "city",
          "contactEmail",
          "contactNumber",
          "description",
          "hasDelivery",
          "name",
          "postalCode",
          "street"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 32,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "maxLength": 32,
            "minLength": 3,
            "type": "string"
          },
          "category": {
            "maxLength": 16,
            "minLength": 3,
            "type": "string"
          },
          "hasDelivery": {
            "type": "boolean"
          },
          "contactEmail": {
            "minLength": 5,
            "type": "string",
            "description": "<i>Accept Only Valid Email</i>"
          },
          "contactNumber": {
            "maxLength": 13,
            "minLength": 8,
            "type": "string",
            "description": "<i>Accept Only Numbers</i>"
          },
          "city": {
            "maxLength": 16,
            "minLength": 3,
            "type": "string"
          },
          "street": {
            "maxLength": 32,
            "minLength": 3,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 10,
            "minLength": 3,
            "type": "string",
            "description": "<i>Accept Only Numbers</i>"
          }
        },
        "additionalProperties": false
      },
      "DishDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "kiloCalories": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RestaurantDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "hasDelivery": {
            "type": "boolean"
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "logoSasUrl": {
            "type": "string",
            "nullable": true
          },
          "dishes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DishDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RestaurantDtoPagedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestaurantDto"
            },
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalItemsCount": {
            "type": "integer",
            "format": "int32"
          },
          "itemsFrom": {
            "type": "integer",
            "format": "int32"
          },
          "itemsTo": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SortDirection": {
        "enum": [
          "Ascending",
          "Descending"
        ],
        "type": "string"
      },
      "UpdateRestaurantCommand": {
        "required": [
          "description",
          "hasDelivery",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 32,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "maxLength": 32,
            "minLength": 3,
            "type": "string"
          },
          "hasDelivery": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
```