<think>
OK
</think>

Agora, gere a especificação TSL para o seguinte endpoint OpenAPI, levando em conta as regras e descrições do exemplo anterior. Atenção para não comentar, apenas gerar o YAML:
```json
{
    "openapi": "3.0.0",
    "info": {
        "title": "Quiz Questions API",
        "version": "1.0.0"
    },
    "paths": {
        "/quizzes/{quizId}/questions": {
            "get": {
                "tags": ["Questions"],
                "summary": "List all questions from a quiz",
                "description": "Retrieves a list of all questions from a specific quiz. Questions are ordered by creation date.",
                "parameters": [
                    {
                        "name": "quizId",
                        "in": "path",
                        "description": "ID of the quiz to retrieve questions from",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of questions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Question"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid quiz ID format"
                    },
                    "404": {
                        "description": "Quiz not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Question": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "questionText": {
                        "type": "string",
                        "maxLength": 1000,
                        "minLength": 10
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 2,
                        "maxItems": 5
                    }
                }
            }
        }
    }
}
``` 

test_cases:
  - id: TC101
    group: Questions
    name: List Questions When Valid QuizId Returns OK
    description: Recupera todas as perguntas de um quiz existente.
    endpoint: /quizzes/1/questions
    method: GET
    preconditions:
      - "Existe um quiz com id 1."
      - "Quiz com id 1 possui 3 perguntas cadastradas."
    expected_response:
      status_code: 200
      body:
        length: 3
  - id: TC102
    group: Questions
    name: List Questions When Non-Existent QuizId Returns NotFound
    description: Tentativa de recuperar perguntas de um quiz que não existe.
    endpoint: /quizzes/999999/questions
    method: GET
    expected_response:
      status_code: 404
  - id: TC103
    group: Questions
    name: List Questions When Invalid QuizId Format Returns BadRequest
    description: Tentativa de recuperar perguntas com ID do quiz inválido.
    endpoint: /quizzes/abc/questions
    method: GET
    expected_response:
      status_code: 400
  - id: TC104
    group: Questions
    name: List Questions When Negative QuizId Returns BadRequest
    description: Tentativa de recuperar perguntas com ID do quiz negativo.
    endpoint: /quizzes/-1/questions
    method: GET
    expected_response:
      status_code: 400
  - id: TC105
    group: Questions
    name: List Questions When Zero QuizId Returns BadRequest
    description: Tentativa de recuperar perguntas com ID do quiz zero.
    endpoint: /quizzes/0/questions
    method: GET
    expected_response:
      status_code: 400
  - id: TC106
    group: Questions
    name: List Questions When Empty QuizId Returns BadRequest
    description: Tentativa de recuperar perguntas com ID do quiz vazio.
    endpoint: /quizzes//questions
    method: GET
    expected_response:
      status_code: 400